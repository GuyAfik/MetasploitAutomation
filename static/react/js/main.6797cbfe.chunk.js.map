{"version":3,"sources":["components/TopBar.jsx","actions/cardsActions.js","components/SideDrawer.jsx","actions/sideDrawerActions.js","components/CustomCard.jsx","containers/HomePage.jsx","containers/AWSPage.jsx","containers/DockerPage.jsx","components/NewUserModal.jsx","actions/newUserModalActions.js","containers/LoginPage.jsx","App.js","serviceWorker.js","reducers/cardsReducer.js","reducers/sideDrawerReducer.js","reducers/newUserModalReducer.js","store.js","index.js"],"names":["Title","Typography","TopBar","props","user","style","display","alignItems","justifyContent","height","backgroundColor","level","color","addCard","card","type","payload","Option","Select","connect","state","sideDrawerR","sideDrawerReducer","dispatch","close","useState","name","ip","exploit","description","newCard","setNewCard","createFailed","setCreateFailed","Form","useForm","form","handleOnClose","resetFields","title","width","onClose","visible","isOpen","bodyStyle","paddingBottom","layout","hideRequiredMark","gutter","span","Item","label","rules","required","message","onChange","e","target","value","placeholder","TextArea","rows","flexDirection","status","subTitle","position","bottom","right","htmlType","onClick","console","log","marginRight","CustomCard","details","Card","raised","Content","Icon","alignSelf","size","extra","Grid","columns","Row","marginLeft","LoadingOutlined","fontSize","cardR","cardsReducer","open","cards","length","alignContent","flexWrap","map","index","margin","nonEmptyPage","shape","icon","PlusOutlined","AWSPage","DockerPage","newUserModal","newUserModalReducer","confirmLoading","setConfirmLoading","ShowAlert","setShowAlert","email","newPass","newPassRepeat","newUser","setNewUser","emailRegex","isNewUserValid","test","centered","onOk","setTimeout","onCancel","direction","prefix","UserOutlined","Password","LockOutlined","history","useHistory","showAlert","isLoading","setIsLoading","userEmail","setUserEmail","userPassword","setUserPassword","marginTop","marginBottom","tip","push","showIcon","App","exact","path","defaultSelectedKeys","mode","ItemGroup","key","HomeOutlined","to","AmazonOutlined","DropboxOutlined","MoreOutlined","Boolean","window","location","hostname","match","initialState","cardReducer","action","createStore","combineReducers","applyMiddleware","logger","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"js/main.6797cbfe.chunk.js","sourcesContent":["import React, {} from \"react\";\nimport { Typography } from 'antd';\nconst { Title } = Typography;\n\n\nconst TopBar = (props) => {\n    const {user} = props;\n\n\n    return (\n            <div style={{display: \"flex\", alignItems: \"center\", justifyContent:\"space-around\", height: 100, backgroundColor: \"#096dd9\"}}>\n                    <Title level={2} style={{color: \"#ffffff\"}}>Welcome to your Dashboard</Title>\n            </div>\n    );\n\n}\n\nexport default TopBar;\n","export function addCard(card) {\n    return {\n        type: 'ADD_CARD',\n        payload: card\n    }\n}\n","import React, {useState} from 'react';\nimport {Drawer, Form, Button, Col, Row, Input, Select, Result} from 'antd';\nimport {connect} from 'react-redux';\nimport {closeSideDrawer} from \"../actions/sideDrawerActions\";\nimport {addCard} from \"../actions/cardsActions\";\n\nconst {Option} = Select;\n\nconst SideDrawer = (props) => {\n    const [newCard, setNewCard] = useState({name: \"\", ip: \"\", exploit: \"\", description: \"\"});\n    const [createFailed, setCreateFailed] = useState(false);\n    const [form] = Form.useForm();\n\n    const handleOnClose = () => {\n        props.close();\n        setCreateFailed(false);\n        setNewCard({name: \"\", ip: \"\", exploit: \"\", description: \"\"});\n        form.resetFields();\n    }\n\n    const handleOnSubmit = () => {\n        if (newCard.name !== \"\" && newCard.ip !== \"\" && newCard.exploit !== \"\") {\n            props.addCard(newCard)\n            console.log(newCard);\n            handleOnClose();\n        } else {\n            setCreateFailed(true);\n        }\n\n    }\n\n    return (\n        <>\n            <Drawer\n                title=\"Create new pentest \"\n                width={720}\n                onClose={handleOnClose}\n                visible={props.sideDrawerR.isOpen}\n                bodyStyle={{paddingBottom: 80}}\n            >\n                <Form layout=\"vertical\" hideRequiredMark form={form}>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{required: true, message: 'Name can\\'t be empty!',}]}\n                            >\n                                <Input onChange={e => setNewCard({...newCard, name: e.target.value})}\n                                       placeholder=\"Give your pentest a name\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"ipAddress\"\n                                label=\"Target IP address\"\n                                rules={[{required: true, message: 'IP Address can\\'t be empty!'}]}\n                            >\n                                <Input onChange={e => setNewCard({...newCard, ip: e.target.value})}\n                                       placeholder=\"Please enter ip address\"/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"exploit\"\n                                label=\"Exploit\"\n                                rules={[{required: true, message: 'Exploit can\\'t be empty!'}]}\n                            >\n                                <Select onChange={value => setNewCard({...newCard, exploit: value})}\n                                        placeholder=\"Please select an exploit\">\n                                    <Option value=\"Ddos\">Ddos</Option>\n                                    <Option value=\"ip spoofing\">IP Spoofing</Option>\n                                    <Option value=\"man in the middle\">Man in the middle</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: false,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea onChange={e => setNewCard({...newCard, description: e.target.value})}\n                                                rows={4}\n                                                placeholder=\"please enter short description\"/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <div style={{display: \"flex\", flexDirection: \"column\", width: '100%', height: '40vh'}}>\n                        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                            {createFailed ? <Result\n                                status=\"error\"\n                                title=\"Oppss...\"\n                                subTitle=\"Please check the required fileds are filled before resubmitting.\"\n                            /> : null}\n                        </div>\n                        <Form.Item>\n                            <div style={{position: \"fixed\", bottom: '20px', right: '20px'}}>\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={handleOnSubmit}\n                                        style={{marginRight: 8}}>\n                                    Create\n                                </Button>\n                                <Button onClick={handleOnClose}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </Form.Item>\n                    </div>\n                </Form>\n            </Drawer>\n        </>\n    )\n        ;\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        sideDrawerR: state.sideDrawerReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        close: () => {\n            dispatch(closeSideDrawer())\n        },\n        addCard: (card) => {\n            dispatch(addCard(card))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawer);\n","export function openSideDrawer() {\n    return {type: \"OPEN\"}\n}\n\nexport function closeSideDrawer() {\n    return {type: \"CLOSE\"}\n}\n","import React from \"react\";\nimport {Card, Grid, Icon} from 'semantic-ui-react';\nimport Text from \"antd/lib/typography/Text\";\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {Tooltip} from 'antd';\n\n\nconst CustomCard = (props) => {\n// details: {name:\"\", ip:\"\", exploit:\"\", description:\"\"}\n    const {details} = props;\n\n    return (\n        <Tooltip title={details.description}>\n        <Card raised={true} style={{width: 190}} onClick={() =>console.log(details.description)}>\n            <Card.Content>\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n                    < Icon style={{alignSelf:'center'}} size={\"huge\"} name='laptop'/>\n                    <Text style={{alignSelf:'center'}}>{details.name}</Text>\n                </div>\n            </Card.Content>\n            <Card.Content extra>\n                <Grid columns={1} style={{\n                    width: '100%'\n                }}>\n                    <Grid.Row>\n                        < Icon style={{marginLeft: 10}} size={\"large\"} name='computer'/>\n                        {details.ip}\n                    </Grid.Row>\n                    <Grid.Row>\n                        < Icon style={{marginLeft: 10}} size={\"large\"} name='user secret'/>\n                        {details.exploit}\n                    </Grid.Row>\n                    <Grid.Row>\n                        <LoadingOutlined style={{marginLeft: 10, marginRight:10, fontSize: 20}}/>\n                        working...\n                    </Grid.Row>\n                </Grid>\n            </Card.Content>\n        </Card>\n        </Tooltip>);\n\n}\n\nexport default CustomCard;\n","import React from 'react'\nimport {Button, Typography, Divider, Empty, Tooltip} from 'antd';\nimport {connect} from \"react-redux\";\nimport {addCard} from \"../actions/cardsActions\";\nimport {openSideDrawer} from \"../actions/sideDrawerActions\";\nimport SideDrawer from \"../components/SideDrawer\";\nimport CustomCard from \"../components/CustomCard\";\nimport {PlusOutlined} from '@ant-design/icons';\n\nconst {Title} = Typography;\n\nconst nonEmptyPage = (props) => {\n    return (\n        <div style={{\n            height: '70vh',\n            width: '100%',\n            display: 'flex',\n            alignContent: 'flex-start',\n            justifyContent: 'flex-start',\n            flexWrap: 'wrap'\n        }}>\n            {props.cardR.cards.map((card, index) => {\n                return (\n                    <div style={{margin: 10}}>\n                        <CustomCard details={card}/>\n                    </div>\n                )\n            })}\n        </div>);\n}\n\nconst emptyPage = () => {\n    return (\n        <div style={{height: '80vh', width: '100%', display: \"flex\", justifyContent: \"center\"}}>\n            <Empty style={{alignSelf: \"center\"}}/>\n        </div>);\n}\n\n\nconst HomePage = (props) => {\n    return (\n        <div style={{width: '100%', display: 'block'}}>\n            <SideDrawer/>\n            <div style={{display: \"flex\"}}>\n                <Title level={4} style={{color: \"#91d5ff\", marginLeft: 20}}>Home</Title>\n            </div>\n            <Divider/>\n            {props.cardR.cards.length === 0 ? emptyPage() : nonEmptyPage(props)}\n            <div style={{position: 'fixed', bottom: '40px', right: '40px'}}>\n                <Tooltip title={\"Create new PenTest\"}>\n                    <Button type=\"primary\" shape={'circle'} size={'large'} icon={<PlusOutlined/>} onClick={() => {\n                        props.open()\n                    }}/>\n                </Tooltip>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cardR: state.cardsReducer,\n        sideDrawerR: state.sideDrawerReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addCard: (card) => {\n            dispatch(addCard(card))\n        },\n        open: () => {\n            dispatch(openSideDrawer())\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport {Divider, Empty, Typography} from 'antd';\nconst {Title} = Typography;\nconst AWSPage = () => {\n\n    return (\n        <div style={{width: '100%'}}>\n            <div style={{display: \"flex\"}}>\n                <Title level={4} style={{color: \"#91d5ff\", marginLeft: 20}}>AWS</Title>\n            </div>\n            <Divider/>\n            <div style={{height: '80vh', width: '100%', display: \"flex\", justifyContent: \"center\"}}>\n                <Empty style={{alignSelf: \"center\"}}/>\n            </div>\n        </div>);\n\n}\nexport default AWSPage;\n","import React from \"react\";\nimport {Divider, Empty, Typography} from 'antd';\n\nconst {Title} = Typography;\nconst DockerPage = () => {\n\n    return (\n        <div style={{width: '100%'}}>\n            <div style={{display: \"flex\"}}>\n                <Title level={4} style={{color: \"#91d5ff\", marginLeft: 20}}>Docker</Title>\n            </div>\n            <Divider/>\n            <div style={{height: '80vh', width: '100%', display: \"flex\", justifyContent: \"center\"}}>\n                <Empty style={{alignSelf: \"center\"}}/>\n            </div>\n        </div>);\n\n}\nexport default DockerPage;\n","import React, {useState} from 'react';\nimport {Alert, Input, Modal, Space} from \"antd\";\nimport {closeNewUserModal} from \"../actions/newUserModalActions\";\nimport {connect} from \"react-redux\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\n\nconst NewUserModal = props => {\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [ShowAlert, setShowAlert] = useState(false);\n    const [newUser, setNewUser] = useState({email: \"\", newPass: \"\", newPassRepeat: \"\"});\n    const emailRegex = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\n    const isEmailValid = () => {\n        if (!emailRegex.test(newUser.email)) {\n            return false\n        }\n        return true\n    }\n\n    const isNewUserValid = () => {\n        if (newUser.email === \"\" || newUser.newPass === \"\" || newUser.newPassRepeat === \"\") {\n            return false\n        }\n        if (!isEmailValid()) {\n            return false\n        }\n        if (newUser.newPass !== newUser.newPassRepeat) {\n            return false\n        }\n        return true\n    }\n\n    const handleOk = () => {\n        setConfirmLoading(true);\n        setTimeout(() => {\n            if (isNewUserValid()) {\n                props.close();\n                setConfirmLoading(false);\n                setShowAlert(false)\n            } else {\n                setShowAlert(true)\n                console.log(\"Not Valid User!\")\n                setConfirmLoading(false);\n            }\n        }, 2000)\n    };\n\n    const handleCancel = () => {\n        setShowAlert(false)\n        props.close();\n    };\n    return (\n        <>\n            <Modal\n                centered\n                title=\"New user\"\n                visible={props.newUserModal.isOpen}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                confirmLoading={confirmLoading}\n            >\n                <div style={{display: \"flex\", alignSelf: \"center\", flexDirection: \"column\", width: '100%'}}>\n                    <Space size={\"large\"} direction={\"vertical\"}>\n                        <Input size=\"large\" placeholder=\"Enter your email\" prefix={<UserOutlined/>}\n                               onChange={e => setNewUser({...newUser, email: e.target.value})}/>\n                        <Input.Password size=\"large\" placeholder=\"Enter new password\" prefix={<LockOutlined/>}\n                                        onChange={e => setNewUser({...newUser, newPass: e.target.value})}/>\n                        <Input.Password size=\"large\" placeholder=\"Enter new password again\" prefix={<LockOutlined/>}\n                                        onChange={e => setNewUser({...newUser, newPassRepeat: e.target.value})}/>\n                        {ShowAlert ? <Alert message=\"Be sure you've entered valid information\" type=\"error\"/> : null}\n                    </Space>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        newUserModal: state.newUserModalReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        close: () => {\n            dispatch(closeNewUserModal())\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserModal);\n","export function openNewUserModal() {\n    return {type: \"OPEN\"}\n}\n\nexport function closeNewUserModal() {\n    return {type: \"CLOSE\"}\n}\n","import React, {useState} from 'react';\nimport {Alert, Button, Input, Space, Spin} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {useHistory} from \"react-router-dom\";\nimport {openNewUserModal} from \"../actions/newUserModalActions\";\nimport NewUserModal from \"../components/NewUserModal\";\nimport {connect} from \"react-redux\";\n\nconst LoginPage = props => {\n    const history = useHistory();\n    const [showAlert, setShowAlert] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [userPassword, setUserPassword] = useState(\"\");\n\n    const performLogin = () => {\n        setIsLoading(true);\n        setTimeout(() => {\n            if (userEmail === \"\" || userPassword === \"\") {\n                setShowAlert(true);\n                setIsLoading(false);\n            } else {\n                console.log(userEmail, userPassword)\n                history.push('/home');\n            }\n        }, 1500);\n    }\n\n\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            height: '100vh',\n            width: '100%',\n            flexDirection: \"column\"\n        }}>\n            <div style={{display: \"flex\", alignSelf: \"center\", flexDirection: \"column\", width: '350px'}}>\n                <Space size={\"large\"} direction={\"vertical\"}>\n                    <Input size=\"large\" placeholder=\"Enter email\" prefix={<UserOutlined/>}\n                           onChange={e => setUserEmail(e.target.value)}/>\n                    <Input.Password size=\"large\" placeholder=\"Enter password\" prefix={<LockOutlined/>}\n                                    onChange={e => setUserPassword(e.target.value)}/>\n                </Space>\n            </div>\n            <NewUserModal/>\n            <div style={{display: \"flex\", marginTop: '25px', marginBottom: '25px', justifyContent: \"center\"}}>\n                {isLoading ? <Spin size={\"large\"} tip=\"Loading...\"/> :\n                    <div>\n                        <Button type={\"primary\"} shape={\"round\"} onClick={() => {\n                            performLogin();\n                        }}>\n                            Login\n                        </Button>\n                        <Button type=\"link\" onClick={() => props.open()}>Not a User? register</Button>\n                    </div>\n                }\n            </div>\n            {showAlert ? <Alert\n                style={{width: '400px', alignSelf: \"center\"}}\n                message=\"Error\"\n                description=\"Email or password are wrong. Please try again\"\n                type=\"error\"\n                showIcon\n            /> : null}\n        </div>);\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        newUserModal: state.newUserModalReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        open: () => {\n            dispatch(openNewUserModal())\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport {Row, Col, Menu, Divider} from 'antd';\nimport 'antd/dist/antd.css';\nimport TopBar from \"./components/TopBar\";\nimport HomePage from \"./containers/HomePage\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport AWSPage from \"./containers/AWSPage\";\nimport {AmazonOutlined, DropboxOutlined, HomeOutlined, MoreOutlined} from \"@ant-design/icons\";\nimport DockerPage from \"./containers/DockerPage\";\nimport LoginPage from \"./containers/LoginPage\";\n\n\nexport function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <LoginPage/>\n                </Route>\n                <div>\n                    <Row>\n                        <Col span={24}>\n                            <TopBar/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={6}>\n                            <Menu\n                                style={{width: '100%'}}\n                                defaultSelectedKeys={['1']}\n                                mode=\"inline\"\n                            >\n                                <Menu.ItemGroup key=\"g1\" title=\"General\">\n                                    <Divider/>\n                                    <Menu.Item key=\"1\" icon={<HomeOutlined/>}><Link to={'/home'}>Home</Link></Menu.Item>\n                                    <Menu.Item key=\"2\" icon={<AmazonOutlined/>}><Link\n                                        to={'/aws'}>AWS</Link></Menu.Item>\n                                    <Menu.Item key=\"3\" icon={<DropboxOutlined/>}><Link\n                                        to={'/metasploit'}>Metasploit Details</Link></Menu.Item>\n                                    <Menu.Item key=\"4\" icon={<MoreOutlined/>}>More</Menu.Item>\n                                </Menu.ItemGroup>\n                            </Menu>\n\n                        </Col>\n                        <Col span={18}>\n                            <Row>\n                                <Route path=\"/home\">\n                                    <HomePage/>\n                                </Route>\n                                <Route path=\"/aws\">\n                                    <AWSPage/>\n                                </Route>\n                                <Route path=\"/metasploit\">\n                                    <DockerPage/>\n                                </Route>\n                            </Row>\n                        </Col>\n                    </Row>\n                </div>\n            </Switch>\n        </Router>\n\n    )\n        ;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    cards: []\n};\n\nconst cardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_CARD\":\n            state = {\n                ...state,\n                cards: [...state.cards, action.payload]\n            }\n            break;\n        default:\n            break;\n    }\n    return state;\n};\nexport default cardReducer;\n","const initialState = {\n    isOpen: false\n};\n\nconst sideDrawerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"OPEN\":\n            state = {\n                ...state,\n                isOpen: true\n            }\n            break;\n        case \"CLOSE\":\n            state = {\n                ...state,\n                isOpen: false\n            }\n            break;\n        default:\n            break;\n    }\n    return state;\n};\nexport default sideDrawerReducer;\n","const initialState = {\n    isOpen: false\n}\n\nconst newUserModalReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"OPEN\":\n            state = {\n                ...state,\n                isOpen: true\n            }\n            break;\n        case \"CLOSE\":\n            state = {\n                ...state,\n                isOpen: false\n            }\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default newUserModalReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport logger from \"redux-logger\";\nimport cardsReducer from \"./reducers/cardsReducer\"\nimport sideDrawerReducer from \"./reducers/sideDrawerReducer\";\nimport newUserModalReducer from \"./reducers/newUserModalReducer\";\n\n\nexport default createStore(combineReducers({cardsReducer, sideDrawerReducer, newUserModalReducer}),\n    {},\n    applyMiddleware(logger));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>,\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}