{"version":3,"sources":["components/TopBar.jsx","actions/userActions.js","components/SideDrawer.jsx","actions/sideDrawerActions.js","actions/modalsActions.js","components/CustomCard.jsx","components/CardDetailsModal.jsx","containers/HomePage.jsx","containers/AWSPage.jsx","containers/DockerPage.jsx","Utils/Utils.js","components/NewUserModal.jsx","containers/LoginPage.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/sideDrawerReducer.js","reducers/modalsReducer.js","store.js","index.js"],"names":["Title","Typography","connect","state","userR","userReducer","dispatch","props","style","display","alignItems","justifyContent","height","backgroundColor","level","color","name","addCard","card","type","payload","Option","Select","sideDrawerR","sideDrawerReducer","close","useState","ip","exploit","description","newCard","setNewCard","createFailed","setCreateFailed","Form","useForm","form","handleOnClose","resetFields","title","width","onClose","visible","isOpen","bodyStyle","paddingBottom","layout","hideRequiredMark","gutter","span","Item","label","rules","required","message","onChange","e","target","value","placeholder","TextArea","rows","flexDirection","status","subTitle","position","bottom","right","htmlType","onClick","console","log","marginRight","openCardModal","cardDetails","details","Card","raised","Content","Icon","alignSelf","size","extra","Grid","columns","Row","marginLeft","LoadingOutlined","fontSize","modalsR","modalsReducer","closeCardModal","cardModal","centered","onOk","onCancel","JSON","stringify","openSideDrawer","userData","cards","length","alignContent","flexWrap","map","index","margin","nonEmptyPage","shape","icon","PlusOutlined","AWSPage","DockerPage","axios","require","emailRegex","email","password","a","get","res","data","isEmailValid","test","confirmLoading","setConfirmLoading","isShown","alert","setAlert","newPass","newPassRepeat","newUser","setNewUser","newUserModal","post","then","catch","err","direction","prefix","UserOutlined","lastName","Password","LockOutlined","open","startNewSession","user","newSession","history","useHistory","isLoading","setIsLoading","userEmail","setUserEmail","userPassword","setUserPassword","performLogin","getUser","push","marginTop","marginBottom","tip","showIcon","App","exact","path","defaultSelectedKeys","mode","ItemGroup","key","HomeOutlined","to","AmazonOutlined","DropboxOutlined","MoreOutlined","Boolean","window","location","hostname","match","action","initialState","createStore","combineReducers","applyMiddleware","logger","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"js/main.b9ddda3d.chunk.js","sourcesContent":["import React, {} from \"react\";\nimport {Typography} from 'antd';\nimport {connect} from \"react-redux\";\n\nconst {Title} = Typography;\n\n\nconst TopBar = (props) => {\n\n    return (\n        <div style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n            height: 100,\n            backgroundColor: \"#096dd9\"\n        }}>\n            <Title level={2} style={{color: \"#ffffff\"}}>Welcome to your Dashboard {props.userR.name}!</Title>\n        </div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userR: state.userReducer,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n","\nexport function addCard(card) {\n    return {\n        type: 'ADD_CARD',\n        payload: card\n    }\n}\n\nexport function newSession(user) {\n    return {\n        type: 'NEW_SESSION',\n        payload: user\n    }\n}\n","import React, {useState} from 'react';\nimport {Drawer, Form, Button, Col, Row, Input, Select, Result} from 'antd';\nimport {connect} from 'react-redux';\nimport {closeSideDrawer} from \"../actions/sideDrawerActions\";\nimport {addCard} from \"../actions/userActions\";\n\nconst {Option} = Select;\n\nconst SideDrawer = (props) => {\n    const [newCard, setNewCard] = useState({name: \"\", ip: \"\", exploit: \"\", description: \"\"});\n    const [createFailed, setCreateFailed] = useState(false);\n    const [form] = Form.useForm();\n\n    const handleOnClose = () => {\n        props.close();\n        setCreateFailed(false);\n        setNewCard({name: \"\", ip: \"\", exploit: \"\", description: \"\"});\n        form.resetFields();\n    }\n\n    const handleOnSubmit = () => {\n        if (newCard.name !== \"\" && newCard.ip !== \"\" && newCard.exploit !== \"\") {\n            props.addCard(newCard)\n            console.log(newCard);\n            handleOnClose();\n        } else {\n            setCreateFailed(true);\n        }\n\n    }\n\n    return (\n        <>\n            <Drawer\n                title=\"Create new pentest \"\n                width={720}\n                onClose={handleOnClose}\n                visible={props.sideDrawerR.isOpen}\n                bodyStyle={{paddingBottom: 80}}\n            >\n                <Form layout=\"vertical\" hideRequiredMark form={form}>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[{required: true, message: 'Name can\\'t be empty!',}]}\n                            >\n                                <Input onChange={e => setNewCard({...newCard, name: e.target.value})}\n                                       placeholder=\"Give your pentest a name\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"ipAddress\"\n                                label=\"Target IP address\"\n                                rules={[{required: true, message: 'IP Address can\\'t be empty!'}]}\n                            >\n                                <Input onChange={e => setNewCard({...newCard, ip: e.target.value})}\n                                       placeholder=\"Please enter ip address\"/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"exploit\"\n                                label=\"Exploit\"\n                                rules={[{required: true, message: 'Exploit can\\'t be empty!'}]}\n                            >\n                                <Select onChange={value => setNewCard({...newCard, exploit: value})}\n                                        placeholder=\"Please select an exploit\">\n                                    <Option value=\"Ddos\">Ddos</Option>\n                                    <Option value=\"ip spoofing\">IP Spoofing</Option>\n                                    <Option value=\"man in the middle\">Man in the middle</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"description\"\n                                label=\"Description\"\n                                rules={[\n                                    {\n                                        required: false,\n                                        message: 'please enter url description',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea onChange={e => setNewCard({...newCard, description: e.target.value})}\n                                                rows={4}\n                                                placeholder=\"please enter short description\"/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <div style={{display: \"flex\", flexDirection: \"column\", width: '100%', height: '40vh'}}>\n                        <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                            {createFailed ? <Result\n                                status=\"error\"\n                                title=\"Oppss...\"\n                                subTitle=\"Please check the required fileds are filled before resubmitting.\"\n                            /> : null}\n                        </div>\n                        <Form.Item>\n                            <div style={{position: \"fixed\", bottom: '20px', right: '20px'}}>\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={handleOnSubmit}\n                                        style={{marginRight: 8}}>\n                                    Create\n                                </Button>\n                                <Button onClick={handleOnClose}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </Form.Item>\n                    </div>\n                </Form>\n            </Drawer>\n        </>\n    )\n        ;\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        sideDrawerR: state.sideDrawerReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        close: () => {\n            dispatch(closeSideDrawer())\n        },\n        addCard: (card) => {\n            dispatch(addCard(card))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawer);\n","export function openSideDrawer() {\n    return {type: \"OPEN\"}\n}\n\nexport function closeSideDrawer() {\n    return {type: \"CLOSE\"}\n}\n","export function openNewUserModal() {\n    return {type: \"OPEN\"}\n}\n\nexport function closeNewUserModal() {\n    return {type: \"CLOSE\"}\n}\n\nexport function openCardModal(cardDetails) {\n    return {type: \"OPEN_CARD_MODAL\", payload: cardDetails}\n}\n\nexport function closeCardModal() {\n    return {type: \"CLOSE_CARD_MODAL\"}\n}\n","import React from \"react\";\nimport {Card, Grid, Icon} from 'semantic-ui-react';\nimport Text from \"antd/lib/typography/Text\";\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {Tooltip} from 'antd';\nimport {openCardModal} from \"../actions/modalsActions\";\nimport {connect} from \"react-redux\";\n\n\nconst CustomCard = (props) => {\n// details: {name:\"\", ip:\"\", exploit:\"\", description:\"\"}\n    const {details} = props;\n\n    return (\n        <Tooltip title={details.description}>\n            <Card raised={true} style={{width: 190}} onClick={() => props.openCardModal(details)}>\n                <Card.Content>\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n                        < Icon style={{alignSelf: 'center'}} size={\"huge\"} name='laptop'/>\n                        <Text style={{alignSelf: 'center'}}>{details.name}</Text>\n                    </div>\n                </Card.Content>\n                <Card.Content extra>\n                    <Grid columns={1} style={{\n                        width: '100%'\n                    }}>\n                        <Grid.Row>\n                            < Icon style={{marginLeft: 10}} size={\"large\"} name='computer'/>\n                            {details.ip}\n                        </Grid.Row>\n                        <Grid.Row>\n                            < Icon style={{marginLeft: 10}} size={\"large\"} name='user secret'/>\n                            {details.exploit}\n                        </Grid.Row>\n                        <Grid.Row>\n                            <LoadingOutlined style={{marginLeft: 10, marginRight: 10, fontSize: 20}}/>\n                            working...\n                        </Grid.Row>\n                    </Grid>\n                </Card.Content>\n            </Card>\n        </Tooltip>);\n\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        openCardModal: (card) => {\n            dispatch(openCardModal(card))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomCard);\n","import React from 'react';\nimport {Alert, Input, Modal, Space} from \"antd\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {closeCardModal} from \"../actions/modalsActions\";\nimport {connect} from \"react-redux\";\n\nconst CardDetailsModal = (props) => {\n    const card = props.modalsR.cardModal.cardDetails;\n    return (\n        <>\n            <Modal\n                centered\n                title=\"Pentest details\"\n                visible={props.modalsR.cardModal.isOpen}\n                onOk={() => props.closeCardModal()}\n                onCancel={() => props.closeCardModal()}\n            >\n                <div style={{display: \"flex\", alignSelf: \"center\", flexDirection: \"column\", width: '100%'}}>\n                    {JSON.stringify(card)}\n                </div>\n            </Modal>\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {modalsR: state.modalsReducer};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeCardModal: () => {\n            dispatch(closeCardModal())\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetailsModal);\n","import React from 'react'\nimport {Button, Typography, Divider, Empty, Tooltip} from 'antd';\nimport {connect} from \"react-redux\";\nimport {addCard} from \"../actions/userActions\";\nimport {openSideDrawer} from \"../actions/sideDrawerActions\";\nimport SideDrawer from \"../components/SideDrawer\";\nimport CustomCard from \"../components/CustomCard\";\nimport {PlusOutlined} from '@ant-design/icons';\nimport {openCardModal} from \"../actions/modalsActions\";\nimport CardDetailsModal from \"../components/CardDetailsModal\";\n\nconst {Title} = Typography;\n\nconst nonEmptyPage = (props) => {\n    return (\n        <div style={{\n            height: '70vh',\n            width: '100%',\n            display: 'flex',\n            alignContent: 'flex-start',\n            justifyContent: 'flex-start',\n            flexWrap: 'wrap'\n        }}>\n            {props.userR.userData.cards.map((card, index) => {\n                return (\n                    <div style={{margin: 10}}>\n                        <CustomCard details={card}/>\n                    </div>\n                )\n            })}\n        </div>);\n}\n\nconst emptyPage = () => {\n    return (\n        <div style={{height: '80vh', width: '100%', display: \"flex\", justifyContent: \"center\"}}>\n            <Empty style={{alignSelf: \"center\"}}/>\n        </div>);\n}\n\n\nconst HomePage = (props) => {\n    return (\n        <div style={{width: '100%', display: 'block'}}>\n            <SideDrawer/>\n            <div style={{display: \"flex\"}}>\n                <Title level={4} style={{color: \"#91d5ff\", marginLeft: 20}}>Home</Title>\n            </div>\n            <Divider/>\n            {props.userR.userData.cards.length === 0 ? emptyPage() : nonEmptyPage(props)}\n            <div style={{position: 'fixed', bottom: '40px', right: '40px'}}>\n                <Tooltip title={\"Create new PenTest\"}>\n                    <Button type=\"primary\" shape={'circle'} size={'large'} icon={<PlusOutlined/>} onClick={() => {\n                        props.openSideDrawer()\n                    }}/>\n                </Tooltip>\n            </div>\n            <CardDetailsModal/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userR: state.userReducer,\n        sideDrawerR: state.sideDrawerReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addCard: (card) => {\n            dispatch(addCard(card))\n        },\n        openSideDrawer: () => {\n            dispatch(openSideDrawer())\n        },\n        openCardModal: (card) => {\n            dispatch(openCardModal(card))\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport {Divider, Empty, Typography} from 'antd';\nconst {Title} = Typography;\nconst AWSPage = () => {\n\n    return (\n        <div style={{width: '100%'}}>\n            <div style={{display: \"flex\"}}>\n                <Title level={4} style={{color: \"#91d5ff\", marginLeft: 20}}>AWS</Title>\n            </div>\n            <Divider/>\n            <div style={{height: '80vh', width: '100%', display: \"flex\", justifyContent: \"center\"}}>\n                <Empty style={{alignSelf: \"center\"}}/>\n            </div>\n        </div>);\n\n}\nexport default AWSPage;\n","import React from \"react\";\nimport {Divider, Empty, Typography} from 'antd';\n\nconst {Title} = Typography;\nconst DockerPage = () => {\n\n    return (\n        <div style={{width: '100%'}}>\n            <div style={{display: \"flex\"}}>\n                <Title level={4} style={{color: \"#91d5ff\", marginLeft: 20}}>Docker</Title>\n            </div>\n            <Divider/>\n            <div style={{height: '80vh', width: '100%', display: \"flex\", justifyContent: \"center\"}}>\n                <Empty style={{alignSelf: \"center\"}}/>\n            </div>\n        </div>);\n\n}\nexport default DockerPage;\n","const axios = require('axios');\nconst emailRegex = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\nexport function print(str) {\n    console.log(str);\n}\n\nexport function createUser(newUser) {\n    let mockUser = {\n        \"first_name\": \"Guy\",\n        \"last_name\": \"Afik\",\n        \"username\": \"Great10\",\n        \"password\": \"12345678\",\n        \"email\": \"guyafik423468@gmail.com\"\n    }\n    // return axios.post('/Users/Create', {\n    //     // name: newUser.name,\n    //     // password: newUser.newPass,\n    //     // email: newUser.email\n    //\n    // });\n    return axios.post('/Users/Create', mockUser);\n}\n\nexport async function getUser(email, password) {\n    let res = await axios.get(`/Users/Get/${email}/${password}`);\n    console.log(`The User is: ${res.data}`);\n    return res.data;\n}\n\n\nexport function isEmailValid(email) {\n    return emailRegex.test(email)\n\n}\n","import React, {useState} from 'react';\nimport {Alert, Input, Modal, Space} from \"antd\";\nimport {closeNewUserModal} from \"../actions/modalsActions\";\nimport {connect} from \"react-redux\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {createUser, isEmailValid} from \"../Utils/Utils\";\n\nconst NewUserModal = props => {\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [alert, setAlert] = useState({isShown: false, description: \"\"});\n    const [newUser, setNewUser] = useState({\n        name: \"\",\n        email: \"\",\n        newPass: \"\",\n        newPassRepeat: \"\"\n    });\n\n    const isNewUserValid = () => {\n        if (newUser.email === \"\" || newUser.newPass === \"\" || newUser.newPassRepeat === \"\" || newUser.name === \"\") {\n            return false\n        }\n        if (!isEmailValid()) {\n            return false\n        }\n        if (newUser.newPass !== newUser.newPassRepeat) {\n            return false\n        }\n        return true\n    }\n\n    const handleOk = () => {\n        setConfirmLoading(true);\n        // if (isNewUserValid()) {\n            createUser(newUser).then(res => {\n                console.log(res)\n                props.close();\n                setAlert({...alert, isShown: false})\n                setConfirmLoading(false);\n            }).catch(err => {\n                console.log(err)\n                setConfirmLoading(false);\n                setAlert({isShown: true, description: err})\n            });\n        // } else {\n        //     setConfirmLoading(false);\n        //     setAlert({isShown: true, description: 'User is not Valid!'})\n        // }\n    };\n\n    const handleCancel = () => {\n        setAlert({...alert, isShown: false})\n        props.close();\n    };\n    return (\n        <>\n            <Modal\n                centered\n                title=\"New user\"\n                visible={props.modalsR.newUserModal.isOpen}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                confirmLoading={confirmLoading}\n            >\n                <div style={{display: \"flex\", alignSelf: \"center\", flexDirection: \"column\", width: '100%'}}>\n                    <Space size={\"large\"} direction={\"vertical\"}>\n                        <Input size=\"large\" placeholder=\"Enter your name\" prefix={<UserOutlined/>}\n                               onChange={e => setNewUser({...newUser, lastName: e.target.value})}/>\n                        <Input size=\"large\" placeholder=\"Enter your email\" prefix={<UserOutlined/>}\n                               onChange={e => setNewUser({...newUser, email: e.target.value})}/>\n                        <Input.Password size=\"large\" placeholder=\"Enter new password\" prefix={<LockOutlined/>}\n                                        onChange={e => setNewUser({...newUser, newPass: e.target.value})}/>\n                        <Input.Password size=\"large\" placeholder=\"Enter new password again\" prefix={<LockOutlined/>}\n                                        onChange={e => setNewUser({...newUser, newPassRepeat: e.target.value})}/>\n                        {alert.isShown ? <Alert message={alert.description} type=\"error\"/> : null}\n                    </Space>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        modalsR: state.modalsReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        close: () => {\n            dispatch(closeNewUserModal())\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserModal);\n","import React, {useState} from 'react';\nimport {Alert, Button, Input, Space, Spin} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {useHistory} from \"react-router-dom\";\nimport {openNewUserModal} from \"../actions/modalsActions\";\nimport NewUserModal from \"../components/NewUserModal\";\nimport {connect} from \"react-redux\";\nimport {newSession} from \"../actions/userActions\";\nimport {getUser, isEmailValid} from '../Utils/Utils';\nimport Handler from \"../handler/Handler\";\n\nconst LoginPage = props => {\n    // let i = new Handler();\n    // i.setAge(20);\n    // i.printAge();\n    //\n    // let j = new Handler();\n    // j.setAge(30);\n    // j.printAge();\n    //\n    // i.printAge();\n\n    const history = useHistory();\n    const [alert, setAlert] = useState({isShown: false, description: \"\"});\n    const [isLoading, setIsLoading] = useState(false);\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [userPassword, setUserPassword] = useState(\"\");\n\n    const performLogin = () => {\n        setIsLoading(true);\n        if (userEmail === \"\" || userPassword === \"\") {\n            setAlert({isShown: true, description: \"Email or Password are empty!\"});\n            setIsLoading(false);\n        } else if (!isEmailValid(userEmail)) {\n            setAlert({isShown: true, description: \"Email is invalid! it should be in the form: xxx@xxx.xxx\"});\n            setIsLoading(false);\n        } else if (userPassword.length < 8) {\n            setAlert({isShown: true, description: \"Password length should be at least 8 characters!\"});\n            setIsLoading(false);\n        } else {\n            getUser(userEmail, userPassword).then(user => {\n                props.startNewSession(user);\n                history.push('/home');\n            }).catch(err => {\n                console.log(err);\n                setAlert({isShown: true, description: \"User is not register or the details you provided are incorrect\"});\n                setIsLoading(false);\n            })\n        }\n    }\n\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            height: '100vh',\n            width: '100%',\n            flexDirection: \"column\"\n        }}>\n            <div style={{display: \"flex\", alignSelf: \"center\", flexDirection: \"column\", width: '350px'}}>\n                <Space size={\"large\"} direction={\"vertical\"}>\n                    <Input size=\"large\" placeholder=\"Enter email\" prefix={<UserOutlined/>}\n                           onChange={e => setUserEmail(e.target.value)}/>\n                    <Input.Password size=\"large\" placeholder=\"Enter password\" prefix={<LockOutlined/>}\n                                    onChange={e => setUserPassword(e.target.value)}/>\n                </Space>\n            </div>\n            <NewUserModal/>\n            <div style={{display: \"flex\", marginTop: '25px', marginBottom: '25px', justifyContent: \"center\"}}>\n                {isLoading ? <Spin size={\"large\"} tip=\"Loading...\"/> :\n                    <div>\n                        <Button type={\"primary\"} shape={\"round\"} onClick={() => {\n                            performLogin();\n                        }}>\n                            Login\n                        </Button>\n                        <Button type=\"link\" onClick={() => props.open()}>Not a User? register</Button>\n                    </div>\n                }\n            </div>\n            {alert.isShown ? <Alert\n                style={{width: '400px', alignSelf: \"center\"}}\n                message=\"Error\"\n                description={alert.description}\n                type=\"error\"\n                showIcon\n            /> : null}\n        </div>);\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userR: state.userReducer\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        open: () => {\n            dispatch(openNewUserModal())\n        },\n        startNewSession: (user) => {\n            dispatch(newSession(user))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport {Row, Col, Menu, Divider} from 'antd';\nimport 'antd/dist/antd.css';\nimport TopBar from \"./components/TopBar\";\nimport HomePage from \"./containers/HomePage\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport AWSPage from \"./containers/AWSPage\";\nimport {AmazonOutlined, DropboxOutlined, HomeOutlined, MoreOutlined} from \"@ant-design/icons\";\nimport DockerPage from \"./containers/DockerPage\";\nimport LoginPage from \"./containers/LoginPage\";\n\n\nexport function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <LoginPage/>\n                </Route>\n                <div>\n                    <Row>\n                        <Col span={24}>\n                            <TopBar/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={6}>\n                            <Menu\n                                style={{width: '100%'}}\n                                defaultSelectedKeys={['1']}\n                                mode=\"inline\"\n                            >\n                                <Menu.ItemGroup key=\"g1\" title=\"General\">\n                                    <Divider/>\n                                    <Menu.Item key=\"1\" icon={<HomeOutlined/>}><Link to={'/home'}>Home</Link></Menu.Item>\n                                    <Menu.Item key=\"2\" icon={<AmazonOutlined/>}><Link\n                                        to={'/aws'}>AWS</Link></Menu.Item>\n                                    <Menu.Item key=\"3\" icon={<DropboxOutlined/>}><Link\n                                        to={'/metasploit'}>Metasploit Details</Link></Menu.Item>\n                                    <Menu.Item key=\"4\" icon={<MoreOutlined/>}>More</Menu.Item>\n                                </Menu.ItemGroup>\n                            </Menu>\n\n                        </Col>\n                        <Col span={18}>\n                            <Row>\n                                <Route path=\"/home\">\n                                    <HomePage/>\n                                </Route>\n                                <Route path=\"/aws\">\n                                    <AWSPage/>\n                                </Route>\n                                <Route path=\"/metasploit\">\n                                    <DockerPage/>\n                                </Route>\n                            </Row>\n                        </Col>\n                    </Row>\n                </div>\n            </Switch>\n        </Router>\n\n    )\n        ;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const user = {};\n\nconst userReducer = (state = user, action) => {\n    switch (action.type) {\n        case \"ADD_CARD\":\n            state = {\n                ...state,\n                cards: [...state.userData.cards, action.payload]\n            }\n            break;\n        case \"NEW_SESSION\":\n            state = action.payload\n        default:\n            break;\n    }\n    return state;\n};\nexport default userReducer;\n","const initialState = {\n    isOpen: false\n};\n\nconst sideDrawerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"OPEN\":\n            state = {\n                ...state,\n                isOpen: true\n            }\n            break;\n        case \"CLOSE\":\n            state = {\n                ...state,\n                isOpen: false\n            }\n            break;\n        default:\n            break;\n    }\n    return state;\n};\nexport default sideDrawerReducer;\n","const initialState = {\n    newUserModal: {isOpen: false,},\n    cardModal: {\n        isOpen: false,\n        cardDetails: {}\n    }\n}\n\nconst modalsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"OPEN\":\n            state = {\n                ...state,\n                newUserModal: {isOpen: true}\n            }\n            break;\n        case \"CLOSE\":\n            state = {\n                ...state,\n                newUserModal: {isOpen: false}\n            }\n            break;\n        case \"OPEN_CARD_MODAL\":\n            state = {\n                ...state,\n                cardModal: {\n                    isOpen: true,\n                    cardDetails: action.payload\n                }\n            }\n            break;\n        case \"CLOSE_CARD_MODAL\":\n            state = {\n                ...state,\n                cardModal: {\n                    isOpen: false\n                }\n            }\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default modalsReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport logger from \"redux-logger\";\nimport userReducer from \"./reducers/userReducer\"\nimport sideDrawerReducer from \"./reducers/sideDrawerReducer\";\nimport modalsReducer from \"./reducers/modalsReducer\";\nimport thunk from \"redux-thunk\";\n\n\nexport default createStore(combineReducers({userReducer, sideDrawerReducer, modalsReducer: modalsReducer}),\n    {},\n    applyMiddleware(logger, thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>,\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}